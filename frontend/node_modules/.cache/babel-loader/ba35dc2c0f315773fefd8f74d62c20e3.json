{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Dokumenty/GO/Projects/gomusic/src/CreditCards.js\";\nimport React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIALSTATE = \"INITIAL\",\n      SUCCESSSTATE = \"COMPLETE\",\n      FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      value: '',\n      status: INITIALSTATE\n    };\n  }\n\n  renderCreditCardInformation() {\n    const style = {\n      base: {\n        'fontSize': '20px',\n        'color': '#495057',\n        'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n      }\n    };\n\n    const usersavedcard = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn  btn-outline-success text-center mx-auto\",\n          children: \"Use saved card?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 31\n    }, this);\n\n    const remembercardcheck = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row form-check text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        value: \"\",\n        id: \"remembercardcheck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"remembercardcheck\",\n        children: \"Remember Card?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 35\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [usersavedcard, /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4\",\n        children: \"Payment Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cc-name\",\n              children: \"Name On Card:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"cc-name\",\n              name: \"cc-name\",\n              className: \"form-control\",\n              placeholder: \"Name on Card\",\n              onChange: this.handleInputChange,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"card\",\n              children: \"Card Information:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n              id: \"card\",\n              className: \"form-control\",\n              style: style\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), remembercardcheck, /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success btn-large\",\n          children: this.props.operation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderSuccess() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 text-success\",\n        children: \"Credit card payment processed.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-large\",\n        onClick: () => {\n          this.props.toggle();\n        },\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderFailure() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 text-danger\",\n        children: \" Credit card information invalid, try again or exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), this.renderCreditCardInformation()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let id = \"\";\n    console.log(\"Handle submit called, with name: \" + this.state.value);\n\n    if (!this.state.useExisting) {\n      let {\n        token\n      } = await this.props.stripe.createToken({\n        name: this.state.value\n      });\n\n      if (token == null) {\n        console.log(\"invalid token\");\n        this.setState({\n          status: FAILEDSTATE\n        });\n        return;\n      }\n\n      id = token.id;\n    }\n\n    let response = await fetch(\"/charge\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token: id,\n        customer_id: this.props.user,\n        product_id: this.props.productid,\n        sell_price: this.props.price,\n        rememberCard: this.state.remember !== undefined,\n        useExisting: this.state.useExisting\n      })\n    });\n    console.log(response.ok);\n\n    if (response.ok) {\n      console.log(\"Purchase Complete!\");\n      this.setState({\n        status: SUCCESSSTATE\n      });\n    } else {\n      this.setState({\n        status: FAILEDSTATE\n      });\n    }\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    let body = null;\n\n    switch (this.state.status) {\n      case SUCCESSSTATE:\n        body = this.renderSuccess();\n        break;\n\n      case FAILEDSTATE:\n        body = this.renderFailure();\n        break;\n\n      default:\n        body = this.renderCreditCardInformation();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default function CreditCardInformation(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  const CCFormWithStripe = injectStripe(CreditCardForm);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.separator ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 32\n    }, this) : null, /*#__PURE__*/_jsxDEV(StripeProvider, {\n      apiKey: \"pk_test_LwL4RUtinpP3PXzYirX2jNfR\",\n      children: /*#__PURE__*/_jsxDEV(Elements, {\n        children: /*#__PURE__*/_jsxDEV(CCFormWithStripe, {\n          operation: props.operation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n_c = CreditCardInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreditCardInformation\");","map":{"version":3,"sources":["/home/sebastian/Dokumenty/GO/Projects/gomusic/src/CreditCards.js"],"names":["React","injectStripe","StripeProvider","Elements","CardElement","INITIALSTATE","SUCCESSSTATE","FAILEDSTATE","CreditCardForm","Component","constructor","props","handleSubmit","bind","handleInputChange","state","value","status","renderCreditCardInformation","style","base","usersavedcard","remembercardcheck","operation","renderSuccess","toggle","renderFailure","event","preventDefault","id","console","log","useExisting","token","stripe","createToken","name","setState","response","fetch","method","headers","body","JSON","stringify","customer_id","user","product_id","productid","sell_price","price","rememberCard","remember","undefined","ok","target","render","CreditCardInformation","show","CCFormWithStripe","separator"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\n\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.state = {\n            value: '',\n            status: INITIALSTATE\n        };\n    }\n\n    renderCreditCardInformation() {\n        const style = {\n            base: {\n                'fontSize': '20px',\n                'color': '#495057',\n                'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n            }\n        };\n        const usersavedcard = <div>\n            <div className=\"form-row text-center\">\n                <button type=\"button\" className=\"btn  btn-outline-success text-center mx-auto\">Use saved card?</button>\n            </div>\n            <hr />\n        </div>\n\n        const remembercardcheck = <div className=\"form-row form-check text-center\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" />\n            <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\n                Remember Card?\n            </label>\n        </div>;\n        return (\n            <div>\n                {usersavedcard}\n                <h5 className=\"mb-4\">Payment Info</h5>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\n                            <input id=\"cc-name\" name='cc-name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleInputChange} type='text' />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"card\">Card Information:</label>\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\n                        </div>\n                    </div>\n                    {remembercardcheck}\n                    <hr className=\"mb-4\" />\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\n                </form>\n            </div>\n        );\n    }\n\n    renderSuccess() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-success\">Credit card payment processed.....</h5>\n                <button type=\"submit\" className=\"btn btn-success btn-large\" onClick={() => { this.props.toggle() }}>Ok</button>\n            </div>\n        );\n    }\n\n    renderFailure() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-danger\"> Credit card information invalid, try again or exit</h5>\n                {this.renderCreditCardInformation()}\n            </div>\n        );\n    }\n\n    async handleSubmit(event) {\n        \n        event.preventDefault();\n        let id = \"\";\n        console.log(\"Handle submit called, with name: \" + this.state.value);\n\n        if (!this.state.useExisting) {\n            let { token } = await this.props.stripe.createToken({ name: this.state.value });\n            if (token == null) {\n                console.log(\"invalid token\");\n                this.setState({ status: FAILEDSTATE });\n                return;\n            }\n            id = token.id;\n        }\n        let response = await fetch(\"/charge\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                token: id,\n                customer_id: this.props.user,\n                product_id: this.props.productid,\n                sell_price: this.props.price,\n                rememberCard: this.state.remember !== undefined,\n                useExisting: this.state.useExisting\n            })\n        });\n        console.log(response.ok);\n        if (response.ok) {\n            console.log(\"Purchase Complete!\");\n            this.setState({ status: SUCCESSSTATE });\n        } else {\n            this.setState({status: FAILEDSTATE});\n        }\n    }\n\n    handleInputChange(event) {\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    render() {\n\n        let body = null;\n        switch (this.state.status) {\n            case SUCCESSSTATE:\n                body = this.renderSuccess();\n                break;\n            case FAILEDSTATE:\n                body = this.renderFailure();\n                break;\n            default:\n                body = this.renderCreditCardInformation();\n        }\n\n        return (\n            <div>\n                {body}\n            </div>\n        );\n    }\n}\n\nexport default function CreditCardInformation(props) {\n    if (!props.show) {\n        return null;\n    }\n    const CCFormWithStripe = injectStripe(CreditCardForm);\n    return (\n        <div>\n            {props.separator ? <hr /> : null}\n            <StripeProvider apiKey=\"pk_test_LwL4RUtinpP3PXzYirX2jNfR\">\n                <Elements>\n                    <CCFormWithStripe operation={props.operation} />\n                </Elements>\n            </StripeProvider>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}